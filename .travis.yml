sudo: required
services:
    - docker

before_install:
    - docker build -t react-tests -f ./client/Dockerfile.dev ./client
    
script:
    - docker run -e CI=true react-tests npm run test
    
after_success:
    - docker build -t react-client ./client
    - docker build -t express-server ./express-server
    - docker build -t nginx ./nginx
    - docker build -t worker ./worker
    
    # Log in to the docker CLI
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
    
    # update the tag to match the docker repo
    - docker tag react-client "$DOCKER_ID"/react-client
    - docker tag express-server "$DOCKER_ID"/express-server
    - docker tag nginx "$DOCKER_ID"/nginx
    - docker tag worker "$DOCKER_ID"/worker
    
    # Take those images and push them to docker hub
    - docker push "$DOCKER_ID"/react-client
    - docker push "$DOCKER_ID"/express-server
    - docker push "$DOCKER_ID"/nginx
    - docker push "$DOCKER_ID"/worker
    
deploy:
    # travis-ci comes preconfigured to deploy an application
    # to a hadful of different hosting providers such as
    # AWS, Digital Ocean, etc.
    provider: elasticbeanstalk
    region: "us-east-1"
    # from AWS Beanstalk
    app: "107-fibonacci-multi-container"
    env: "107FibonacciMultiContainer-env"
    # AWS S3 bucket 
    # app will be zipped and uploaded to S3 bucket.
    # Then the AWS Elastic Beanstalk will 
    # consume it from that S3 bucket.
    bucket_name: "elasticbeanstalk-us-east-1-351155375043"
    bucket_path: "fib-multi-container"
    
    on:
        branch: master
        
    access_key_id: 
        secure: "$AWS_ACCESS_KEY"
        
    secret_access_key:
        secure: "$AWS_SECRET_KEY"